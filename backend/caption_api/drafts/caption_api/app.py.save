# Step 1: Go into the inner folder
cd caption_api

# Step 2: Overwrite app.py with the TFLite Flask server
cat > app.py << 'EOF'
from flask import Flask, request, jsonify
import tensorflow as tf
import numpy as np
from PIL import Image
import io

app = Flask(__name__)

# Load TFLite model
interpreter = tf.lite.Interpreter(model_path="best_model.tflite")
interpreter.allocate_tensors()

input_details = interpreter.get_input_details()
output_details = interpreter.get_output_details()

def preprocess_image(image_bytes):
    img = Image.open(io.BytesIO(image_bytes)).convert("RGB").resize((128, 128))
    img = np.array(img).astype('float32') / 255.0
    img = np.expand_dims(img, axis=0)  # [1, 128, 128, 3]
    return img

@app.route('/predict', methods=['POST'])
def predict():
    if 'image' not in request.files:
        return jsonify({'error': 'No image uploaded'}), 400

    image = request.files['image'].read()
    input_data = preprocess_image(image)

    interpreter.set_tensor(input_details[0]['index'], input_data)
    interpreter.invoke()
    output_data = interpreter.get_tensor(output_details[0]['index'])

    # Replace with real decoding logic
    dummy_caption = "this is a placeholder caption"

    return jsonify({'caption': dummy_caption})

if __name__ == '__main__':
    app.run(debug=True)
EOF
